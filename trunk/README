About
-----
DVBStreamer is an console based application to stream an entire DVB service 
over UDP. 
It differs from other DVB streaming applications by the use of the DVB-SI to 
work out the PIDs to stream and correctly stream services which use a separate
PCR PID.

Requirements
------------
DVBStreamer requires the following libraries:
sqlite3 (http://www.sqlite.org/)
dvbpsi  (http://developers.videolan.org/libdvbpsi/)

Installation
------------
Before building dvbstreamer you will need the latest version of the following 
packages:

libdvbpsi
sqlite3

Now download and extract the latest source from the sourceforge download page

Once you've done that the next thing to do is run configure to setup the 
makefile, to do this enter the following at the command prompt (add any options
 you would normal add when building using configure)

./configure

When configure has finished and created all the make files its just a matter of
 running make to build the application

make

Once make has finished doing its thing the next step is installing dvbstreamer 
to you chosen location. You will probably want to do this step as root

make install


Setup
-----
Before you can actually start to use dvbstreamer you need to initialise it's 
database of service to do this you'll need a channels.conf file produces by the
 linuxtv.org utility scan. Go here if you need help with scan.

When you have a channels.conf file you then need to start dvbstreamer with the 
-t option specifying the file you've just created. The information in the 
channels.conf file is expected to be for a terrestrial tuner.

To start dvbstream sending packets to UDP port 1234 on the local machine and 
initialise the database using channels.conf file in the current directory use 
the following

dvbstream -o localhost:1234 -t channels.conf

To find out what services have been imported use the services command which 
will list all the available service

dvbstream> service

To quit out of dvbstreamer type quit

dvbstream> quit

One point to note is that each dvb adapter has its own database, thus meaning 
that once dvbstreamer supports cable and satellite cards you could use 
dvbstreamer on 2 or more different cards with out problems

If you have 2 or more cards of the same type in your system you can link the 
first cards database to the second cards database by simply creating a hard 
link in the dvbstreamer directory in your home directory ~/.dvbstreamer

for example to use the same database for card 1 and 2 you would do the following

ln ~/.dvbstreamer/adapter1.db ~/.dvbstreamer/adapter2.db


Running
-------
To start dvbstreamer you need to specify an IP address and a UDP port where the
selected service will be streamed to. You can also optionally specify which 
adapter to use using the -a option.

For example to start dvbstreamer using adapter 2 and send the selected service 
to 192.168.1.1 and UDP port 1234 you would use the following command

dvbstreamer -a 2 -o 192.168.1.1:1234

Once dvbstreamer has started you have the following commands at your disposal:

Command			Description
-------------------------------------------------------------------------------
quit			Exit the program, can be used in the startup file to 
			stop further processing.

services		Lists all the services currently in the database. This 
			list will be updated as updates to the PAT are detected.

multiplex		List only the services on the same multiplex as the 
			currently selected service.

select <service name>	Sets <service name> as the current service, this may 
			mean tuning to a different multiplex.

pids <service name>	List the PIDs for <service name>.

stats			Display the number of packets processed and the number 
			of packets filtered by each filter.

addoutput <output name> <ipaddress>:<udp port>	
			Adds a new destination for sending packets to. This is 
			only used for manually filtered packets. To send 
			packets to this destination you'll need to also call 
			'filterpid' with this output as an argument.

rmoutput <output name>	Removes the destination and stops all filters 
			associated with this output.

outputs			List all active additonal output names and destinations.

addpid <output name> <pid>
			Adds a PID to the filter to be sent to the specified
			output.

rmpid <output name> <pid>
			Removes the PID from the filter that is sending packets
			to the specified output.

outputpids <output>	List the PIDs being filtered for a specific output.
help <command>		Displays help for the specified command or with out the
			command, list all available commands.

Start up files
--------------
Start up files can be useful for doing things that you always want to be setup 
before you get to the dvbstreamer prompt. For example you may always want the 
TDT and EIT tables redirected to a specific UDP port on your local computer.

To use a startup file simple add the -f option on the command line specifying 
the file to read.

For example to use the file eitredirect to redirect EIT tables to port 1235 on 
your local computer you would use the following:

dvbstreamer -o localhost:1234 -f eitredirect

And in eitredirect you would have

# Redirect EIT tables to port 1235 on localhost
addoutput eitoutput localhost:1235
addpid eitoutput 0x12

Its as simple as that, you can use all the commands that you can use on the 
dvbstreamer prompt.

Bugs
----
Please report all bugs to the sourceforge forums.
http://sourceforge.net/tracker/?group_id=164687&atid=832723

Credits
-------
Adam Charrett - Author
Tero Pelander - Submitted several patches and helped to test DVB-C.

History
-------
0.3 Service Addition/Removal
0.2 Add new commands (addoutput etc)
0.1 First public release
